- name: "Make sure that the folder path '/var/lib/systemd/linger' exists (no_systemd)"
  file:
    path: "/var/lib/systemd/linger"
    state: directory
    owner: root
    group: root
    mode: 0755
  when:
    - root_user
    - no_systemd

- name: "Enable user lingering for the Patch Management user '{{ patch_user }}' (no_systemd)"
  file:
    path: "/var/lib/systemd/linger/{{ patch_user }}"
    state: touch
    owner: root
    group: root
    mode: 0755
  when:
    - root_user
    - no_systemd

- name: "Enable user lingering for the Patch Management user '{{ patch_user }}'"
  command: loginctl enable-linger patch_user
  when:
    - root_user
    - not no_systemd

- name: Create the folder path for systemd
  file:
    path: "{{ patch_user_home }}/.config/systemd/user"
    state: directory
    recurse: yes
    owner: "{{ patch_user }}"
    group: "{{ patch_user }}"
    mode: 0755

- name: Create systemd user service for 'patchmgmt'
  template:
    src: "patchmgmt.service.j2"
    dest: "{{ patch_user_home }}/.config/systemd/user/patchmgmt.service"
    owner: "{{ patch_user }}"
    group: "{{ patch_user }}"
    mode: 0644

- name: Create systemd timer for 'patchmgmt'
  template:
    src: "patchmgmt.timer.j2"
    dest: "{{ patch_user_home }}/.config/systemd/user/patchmgmt.timer"
    owner: "{{ patch_user }}"
    group: "{{ patch_user }}"
    mode: 0644

- name: Enable the timer for Patch Management
  systemd:
    daemon_reload: yes
    name: patchmgmt.timer
    state: started
    enabled: yes
    scope: user
  when:
    - not root_user
    - not no_systemd

- name: Create systemd user service for 'system_update_checker'
  template:
    src: "system_update_checker.service.j2"
    dest: "{{ patch_user_home }}/.config/systemd/user/system_update_checker.service"
    owner: "{{ patch_user }}"
    group: "{{ patch_user }}"
    mode: 0644

- name: Create systemd timer for verifying the system update or rollback
  template:
    src: "system_update_checker.timer.j2"
    dest: "{{ patch_user_home }}/.config/systemd/user/system_update_checker.timer"
    owner: "{{ patch_user }}"
    group: "{{ patch_user }}"
    mode: 0644

- name: Enable the timer for system update verification
  systemd:
    daemon_reload: yes
    name: system_update_checker.timer
    state: started
    enabled: yes
    scope: user
  when:
    - not root_user
    - not no_systemd

- name: Create systemd service there keeps Patch Management up-to-date
  template:
    src: "patchmgmt_updater.service.j2"
    dest: "{{ patch_user_home }}/.config/systemd/user/patchmgmt_updater.service"
    owner: "{{ patch_user }}"
    group: "{{ patch_user }}"
    mode: 0644

- name: Enable the service there keeps Patch Management updater
  systemd:
    daemon_reload: yes
    name: patchmgmt_updater.service
    state: started
    enabled: yes
    scope: user
  when:
    - not root_user
    - not no_systemd

- name: Create folder paths for systemd (no_systemd)
  file:
    path: "{{ patch_user_home }}/.config/systemd/user/{{ item }}"
    state: directory
    recurse: yes
    owner: "{{ patch_user }}"
    group: "{{ patch_user }}"
    mode: 0755
  with_items:
    - timers.target.wants
    - default.target.wants
  when:
    - no_systemd

- name: "Enable the timer for Patch Management & system update verification (no_systemd)"
  file:
    src: "{{ patch_user_home }}/.config/systemd/user/{{ item }}"
    path: "{{ patch_user_home }}/.config/systemd/user/timers.target.wants/{{ item }}"
    state: link
    owner: "{{ patch_user }}"
    group: "{{ patch_user }}"
    mode: 0755
  with_items:
    - patchmgmt.timer
    - system_update_checker.timer
  when:
    - no_systemd

- name: Create systemd service there keeps Patch Management up-to-date (no_systemd)
  file:
    src: "{{ patch_user_home }}/.config/systemd/user/patchmgmt_updater.service"
    path: "{{ patch_user_home }}/.config/systemd/user/default.target.wants/patchmgmt_updater.service"
    state: link
    owner: "{{ patch_user }}"
    group: "{{ patch_user }}"
    mode: 0755
  when:
    - no_systemd

### Setup envirement for shells to interact with systemd
- name: Create the folder path for fish
  file:
    path: "{{ patch_user_home }}/.config/fish"
    state: directory
    recurse: yes
    owner: "{{ patch_user }}"
    group: "{{ patch_user }}"
    mode: 0755

- name: Specify the variable 'XDG_RUNTIME_DIR' for fish
  blockinfile:
    path: "{{ patch_user_home }}/.config/fish/config.fish"
    create: yes
    owner: "{{ patch_user }}"
    group: "{{ patch_user }}"
    mode: 0644
    block: |
      ### Systemd variable
      set --export XDG_RUNTIME_DIR /run/user/(id -u)

- name: Specify the variable 'XDG_RUNTIME_DIR' for bash
  blockinfile:
    path: "{{ patch_user_home }}/.bashrc"
    create: yes
    owner: "{{ patch_user }}"
    group: "{{ patch_user }}"
    mode: 0644
    block: |
      ### Systemd variable
      export XDG_RUNTIME_DIR="/run/user/$(id -u)"

