# ex: set tabstop=8 softtabstop=0 expandtab shiftwidth=2 smarttab:
---
- block:
    - name: Run pacman
      command:
        argv:
          - pacman
          - -Syu
          - --noconfirm
          - --ask
          - 20
      register: _result_pacman

    - name: Run pacman (debug)
      debug:
        var: _result_pacman

    - name: Upgrade packages from the aur
      become: yes
      become_user: "{{ patch_user }}"
      command: pikaur -Sy --aur --noconfirm
      register: _result_pikaur
      failed_when:
        # the workaround is to added 'to_json | from_json' and when it work (it is magic)
        - _result_pikaur | to_json | from_json | json_query(filter) | count > 0 or _result_pikaur.rc != 0
      vars:
        filter: "stdout_lines[?contains(@, 'Error! Bad return status for module build on kernel')]"

    # TODO: remove this when the filter has been confirmed to work
    - name: Install ZFS packages - AUR Package Manager (debug)
      debug:
        var:
        # the workaround is to added 'to_json | from_json' and when it work (it is magic)
          - _result_pikaur | to_json | from_json | json_query(filter) | count > 0
          - _result_pikaur.rc != 0
      vars:
        filter: "stdout_lines[?contains(@, 'Error! Bad return status for module build on kernel')]"

    - name: Upgrade packages from the aur (debug)
      debug:
        var: _result_pikaur

    - name: Set the variable indicating that the patch succeeded
      set_fact:
        patch_succeeded: true
  rescue:
    - name: Set the variable indicating that the patch failed
      set_fact:
        patch_succeeded: false

