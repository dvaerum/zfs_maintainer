# ex: set tabstop=8 softtabstop=0 expandtab shiftwidth=2 smarttab:
---

# dennis@server /p/atomic_update> zfs list -t all -ro name,mountpoint,mounted,canmount,origin zroot_10
# NAME                                    MOUNTPOINT    MOUNTED  CANMOUNT  ORIGIN
# zroot_10                                none               no        on  -
# zroot_10/ROOT                           none               no        on  -
# zroot_10/ROOT/Archlinux                 /                  no    noauto  -
# zroot_10/ROOT/Archlinux@before_upgrade  -                   -         -  -
# zroot_10/ROOT/Archlinux_next_boot       /                 yes    noauto  zroot_10/ROOT/Archlinux@before_upgrade
# zroot_10/data                           none               no        on  -
# zroot_10/data/grub                      /boot/grub        yes        on  -
# zroot_10/data/home                      /home             yes        on  -
# zroot_10/data/home/dennis               /home/dennis      yes        on  -
# zroot_10/data/var                       /var              yes        on  -
# zroot_10/data/var/log                   /var/log          yes        on  -
#
# dennis@server /p/atomic_update> sudo zfs promote zroot_10/ROOT/Archlinux_next_boot
#
# dennis@server /p/atomic_update> zfs list -t all -ro name,mountpoint,mounted,canmount,origin zroot_10
# NAME                                              MOUNTPOINT    MOUNTED  CANMOUNT  ORIGIN
# zroot_10                                          none               no        on  -
# zroot_10/ROOT                                     none               no        on  -
# zroot_10/ROOT/Archlinux                           /                  no    noauto  zroot_10/ROOT/Archlinux_next_boot@before_upgrade
# zroot_10/ROOT/Archlinux_next_boot                 /                 yes    noauto  -
# zroot_10/ROOT/Archlinux_next_boot@before_upgrade  -                   -         -  -
# zroot_10/data                                     none               no        on  -
# zroot_10/data/grub                                /boot/grub        yes        on  -
# zroot_10/data/home                                /home             yes        on  -
# zroot_10/data/home/dennis                         /home/dennis      yes        on  -
# zroot_10/data/var                                 /var              yes        on  -
# zroot_10/data/var/log                             /var/log          yes        on  -
#
# dennis@server /p/atomic_update> sudo zfs destroy zroot_10/ROOT/Archlinux; sudo zfs destroy zroot_10/ROOT/Archlinux_next_boot@before_upgrade
#
# dennis@server /p/atomic_update> sudo zfs rename zroot_10/ROOT/Archlinux_next_boot zroot_10/ROOT/Archlinux
# cannot mount '/': directory is not empty
#
# dennis@server /p/atomic_update> zfs list -t all -ro name,mountpoint,mounted,canmount,origin zroot_10
# NAME                       MOUNTPOINT    MOUNTED  CANMOUNT  ORIGIN
# zroot_10                   none               no        on  -
# zroot_10/ROOT              none               no        on  -
# zroot_10/ROOT/Archlinux    /                  no    noauto  -
# zroot_10/data              none               no        on  -
# zroot_10/data/grub         /boot/grub        yes        on  -
# zroot_10/data/home         /home             yes        on  -
# zroot_10/data/home/dennis  /home/dennis      yes        on  -
# zroot_10/data/var          /var              yes        on  -
# zroot_10/data/var/log      /var/log          yes        on  -
#
### Note: Remember to fix grub


- hosts: localhost
  connection: local
  gather_facts: true

  vars:
    root_zfs_pool: "{{ ansible_cmdline.rpool }}"
    distro_filesystem_path: "{{ root_zfs_pool }}/ROOT/{{ ansible_distribution }}"
    distro_snapshot_path: "{{ root_zfs_pool }}/ROOT/{{ ansible_distribution }}@before_upgrade"
    distro_next_boot_path: "{{ distro_filesystem_path }}_next_boot"

  tasks:
    - name: Promote the filesystgem '{{ distro_next_boot_path }}'
      command: zfs promote '{{ distro_next_boot_path }}'

    - name: Destroy the old filesystem '{{ distro_filesystem_path }}'
      zfs:
        name: "{{ distro_filesystem_path }}"
        state: absent

    - name: Destroy the old filesystem '{{ distro_filesystem_path }}'
      zfs:
        name: "{{ distro_snapshot_path }}"
        state: absent

    - name: Rename to filesystem '{{ distro_next_boot_path }}' -> '{{ distro_filesystem_path }}'
      commnad: zfs rename '{{ distro_next_boot_path }}' '{{ distro_filesystem_path }}'
